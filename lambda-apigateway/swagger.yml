swagger: "2.0"
info:
  version: "2019-03-26T11:14:17Z"
  title: "Ruby付与システム"
host: "api-xxx.hoge.me"
schemes:
- "https"
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
paths:
  /v1/ruby/annotate:
    post:
      x-amazon-apigateway-request-validator: all
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiXXXFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.body.sentences: "method.request.body.sentences"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "sentences"
        description: "文のarray"
        required: true
        schema:
          $ref: "#/definitions/AnnotateRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
  /v1/ruby/polling:
    get:
      x-amazon-apigateway-request-validator: all
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiXXXFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.querystring.job_id: "method.request.querystring.job_id"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/PollingResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
  AnnotateRequest:
    type: "object"
    required:
    - "sentences"
    - "ruby"
    properties:
      sentences:
        type: "array"
        items:
          $ref: "#/definitions/Sentences"
      ruby:
        type: "array"
        items:
          $ref: "#/definitions/RubiesItem"
  Sentences:
    type: "array"
    xml:
      name: "Sentences"
      wrapped: true
    items:
      type: "string"
    example: [
      "チョコを取ってくる",
      "カレーは辛い"
    ]
  RubiesItem:
    type: "object"
    required:
    - "sentence_index"
    - "begin"
    - "end"
    - "ruby"
    properties:
      sentence_index:
        type: "integer"
        example: "0"
        format: "int64"
      begin:
        type: "integer"
        example: "0"
        format: "int64"
      end:
        type: "string"
        example: "かど"
      ruby:
        type: "integer"
        format: "int64"
  PollingResponse:
    type: "object"
    required:
    - "Status"
    - "Elapsed"
    - "Rubies"
    properties:
      Status:
        type: "integer"
        example: "0"
        format: "int64"
      Elapsed:
        type: "integer"
        example: "0"
        format: "int64"
      Rubies:
        type: "array"
        items:
          $ref: "#/definitions/RubiesItem"
  Rubies:
    type: "array"
    items:
      $ref: "#/definitions/RubiesItem"

x-amazon-apigateway-policy:
  Version: "2012-10-17"
  Statement:
  - Effect: "Allow"
    Principal: "*"
    Action: "execute-api:Invoke"
    Resource:
      Fn::Sub: "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}*"